[{"id":0,"href":"/docs/developer/roadmap/","title":"Roadmap","section":"Docs","content":"Roadmap #  First roadmap ðŸŽ‰\nThis document outlines some goals, non-goals, and future aspirations for Ferry as a project.\n Requirements\n Authentication between Tunnels #36  "},{"id":1,"href":"/docs/user/join-mode/","title":"Join Mode","section":"Docs","content":"Join Mode #  There are currently two ways to join\n direct tunnel  direct #  It is suitable for the case where the network between clusters is interoperable, and there is no need to do penetration or proxy operations.\ntunnel #  Applicable to the situation where the control plane cluster cannot access the data plane cluster but the data plane cluster can access the control plane cluster. At this time, it is necessary to establish intranet penetration from the control plane cluster to the data plane cluster.\n"},{"id":2,"href":"/docs/user/quick-start/","title":"Quick Start","section":"Docs","content":"Quick Start #  Prepare at least two clusters for demonstration\nCan be a cluster of one node or a cluster of Kind but at least two.\n Download ferryctl #  ferryctl is the installation and operation tool for ferry\nA ferryctl needs to be installed for each cluster\u0026rsquo;s control node\n https://github.com/ferry-proxy/ferry/releases\nInitialize control plane #  # execute on control plane ferryctl control-plane init Declares to the control plane which data plane needs to join #  # execute on control plane to pre-join other data plane ferryctl control-plane pre-join direct cluster-1 If the network environment is more complex, please refer to Join Mode\nData plane is ready to be managed by control plane #  After the last command is executed of control plane, it responds with a command, copied to data plane to run.\nControl plane begins to control data plane #  After the last command is executed of data plane, it responds with a command, copied to the control plane to run.\nConfiguration rules #  The test application needs to deploy and configure the Service\nRules for configuring Ferry on the control plane cluster\n# Mapping app-1.default.svc of cluster-1 to the app-1.default.svc of control-plane apiVersion: ferry.zsm.io/v1alpha1 kind: FerryPolicy metadata: name: ferry-rule namespace: ferry-system spec: rules: - exports: - clusterName: cluster-1 match: namespace: default name: app-1 imports: - clusterName: control-plane match: namespace: default name: app-1 "}]