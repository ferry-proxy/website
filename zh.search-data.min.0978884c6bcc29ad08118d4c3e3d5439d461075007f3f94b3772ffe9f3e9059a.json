[{"id":0,"href":"/zh/docs/developer/roadmap/","title":"Roadmap","section":"Docs","content":"Roadmap #  First roadmap 🎉\nThis document outlines some goals, non-goals, and future aspirations for Ferry as a project.\n Requirements\n Authentication between Tunnels #36  "},{"id":1,"href":"/zh/docs/user/join-mode/","title":"Join Mode","section":"Docs","content":"加入模式 #  \u0026gt; ferryctl control-plane pre-join --help Generate command for data plane join Need to copy the generated command to run on the data plane. Usage: ferryctl control-plane pre-join [command] Aliases: pre-join, p, pj, join, j Available Commands: direct Clusters can reach each other tunnel Control plane can't touch the data plane Flags: -h, --help help for pre-join 当前有两种加入方式\n direct tunnel  direct #  适用于集群之间网络是互通的情况, 不需要做穿透或者代理操作.\ntunnel #  适用于控制面集群无法访问到数据面集群但是数据面集群可以访问控制面集群的情况, 这时需要建立控制面集群到数据面集群的内网穿透.\n"},{"id":2,"href":"/zh/docs/user/quick-start/","title":"Quick Start","section":"Docs","content":"快速开始 #  准备至少两个集群才能做演示\n可以是一个节点的集群或者 Kind 起的集群但最少也要两个\n 下载 ferryctl #  ferryctl 是 ferry 的安装运维工具\n需要为每个集群的控制节点都安装一个 ferryctl\n https://github.com/ferry-proxy/ferryctl/releases\n初始化控制面集群 #  # 在控制面集群执行 ferryctl control-plane init 向控制面声明哪个数据面需要加入 #  # 在控制平面执行，预连接其他数据平面 ferryctl control-plane pre-join direct cluster-1 如果网络环境较为复杂请参考 加入模式\n数据面做好被控制面管控的准备 #  上一个命令执行后, 会响应一个命令复制到数据面集群执行\n控制面开始管控数据面 #  上一个命令执行后, 会响应一个命令复制到控制面集群执行\n规则配置 #  测试应用需要提前部署并配置 Service\n在控制面集群配置 Ferry 的规则\n# 映射 cluster-1 的 app-1.default.svc 映射到 control-plane 的 app-1.default.svc apiVersion: ferry.zsm.io/v1alpha1 kind: FerryPolicy metadata: name: ferry-test namespace: ferry-system spec: rules: - exports: - clusterName: cluster-1 match: namespace: default name: app-1 imports: - clusterName: control-plane match: namespace: default name: app-1 "}]