<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Ferry Proxy</title><link>https://ferryproxy.io/zh/</link><description>Recent content in Home on Ferry Proxy</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ferryproxy.io/zh/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ferryproxy.io/zh/docs/developer/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/zh/docs/developer/roadmap/</guid><description>Roadmap # 本文概述了Ferry作为一个项目的一些目标、非目标和未来的期望。 Engage encryption Use Ferryctl alone to configure service mapping between clusters without the Controller Status is monitored and displayed in the status of the Hub Multi-cluster failover Multi-cluster load balancing IP-based access control Provide an cluster-to-cluster view of traffic flow and service performance</description></item><item><title>Join Mode</title><link>https://ferryproxy.io/zh/docs/user/join-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/zh/docs/user/join-mode/</guid><description>TODO</description></item><item><title>Quick Start</title><link>https://ferryproxy.io/zh/docs/user/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ferryproxy.io/zh/docs/user/quick-start/</guid><description>快速开始 # 准备至少两个集群才能做演示
可以是一个节点的集群或者 Kind 起的集群但最少也要两个
下载 ferryctl # ferryctl 是 ferry 的安装运维工具
需要为每个集群的控制节点都安装一个 ferryctl
https://github.com/ferryproxy/ferry/releases
初始化控制面集群 # # 在控制面集群执行 ferryctl control-plane init 向控制面声明哪个数据面需要加入 # # 在控制平面执行，预连接其他数据平面 ferryctl control-plane join cluster-1 如果网络环境较为复杂请参考 加入模式
数据面做好被控制面管控的准备 # 上一个命令执行后, 会响应一个命令复制到数据面集群执行
控制面开始管控数据面 # 上一个命令执行后, 会响应一个命令复制到控制面集群执行
规则配置 # 测试应用需要提前部署并配置 Service
在控制面集群配置路由规则
# 映射 cluster-1 的 app-1.default.svc 映射到 control-plane 的 app-1.default.svc apiVersion: traffic.ferryproxy.io/v1alpha2 kind: RoutePolicy metadata: name: ferry-rule namespace: ferry-system spec: exports: - hubName: cluster-1 service: namespace: default name: app-1 imports: - hubName: control-plane service: namespace: default name: app-1</description></item></channel></rss>